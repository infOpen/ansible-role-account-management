---

# Main task file for account-management role

- name: 'Load the OS specific varibles'
  include_vars: "{{ role_path }}/vars/{{ ansible_os_family }}.yml"
  tags:
    - 'install'
    - 'user-management'


# Install required packages
- name: 'Manage Debian family packages install'
  include: 'install_debian.yml'
  tags:
    - 'install'
    - 'user-management'
  when: "{{ ansible_os_family == 'Debian' }}"


# Install required packages
- name: 'Manage RedHat family packages install'
  include: 'install_redhat.yml'
  tags:
    - 'install'
    - 'user-management'
  when: "{{ ansible_os_family == 'RedHat' }}"


- name: 'Manage account create'
  include: 'create_accounts.yml'
  tags:
    - 'config'
    - 'user-management'
    - 'sudo'


- name: 'Manage sudo configuration'
  include: 'configure_sudo.yml'
  tags:
    - 'config'
    - 'user-management'
    - 'sudo'


- name: 'Create user authorized-keys file'
  become: True
  authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ lookup('file', item.1.filename) }}"
    state: "{{ item.1.state | default('present') }}"
    key_options: "{{ item.1.key_options | default('') }}"
    exclusive: "{{ item.0.exclusive_public_keys | default(True) }}"
  with_subelements:
    - "{{ account_management_users }}"
    - 'authorized_public_keys'
  tags:
    - 'config'
    - 'user-management'


- name: 'Get home for each users'
  become: True
  shell: "getent passwd {{ item.name | quote }} | cut -d':' -f6"
  register: 'home_users'
  changed_when: False
  with_items: "{{ account_management_users }}"
  when:
    - "{{ (item.state | default('present')) == 'present' }}"
  tags:
    - 'config'
    - 'user-management'


- name: 'Get primary group for each users'
  become: True
  shell: "id -gn {{ item.name | quote }}"
  register: 'primary_group_users'
  changed_when: False
  with_items: "{{ account_management_users }}"
  when:
    - "{{ (item.state | default('present')) == 'present' }}"
  tags:
    - 'config'
    - 'user-management'


- name: 'Change permissions for user home directory'
  become: True
  file:
    dest: "{{ item.1.stdout }}"
    group: "{{ item.0.name }}"
    owner: "{{ item.2.stdout }}"
    mode: "{{ item.0.home_mode | default('0700') }}"
  with_together:
    - "{{ account_management_users }}"
    - "{{ home_users.results }}"
    - "{{ primary_group_users.results }}"
  when:
    - "{{ account_management_users }}"
    - "{{ (item.0.state | default('present')) == 'present' }}"
  tags:
    - 'config'
    - 'user-management'
